# 1. Поработайте с переменными, создайте несколько, выведите на экран.
# Запросите у пользователя некоторые числа и строки и сохраните в переменные, затем выведите на экран.
# Задаем переменные и выводим их, значение их суммы, либо значение с использованием перемпенных:
a = 1
b = 12
print(a, b)
print(a + b)
value = a + b - 15
print(value)
# Это могут быть разные типы данных, «integer», «string», «float» и т.д..
# Попробуем использовать строчные данные:
c = ("Андрей")
print("Привет,", c)
# И пробуем вариант с «float», «list», еще выведем список.
a = 5.62
b = [1, 1.1, "один"]
d = {1: "Убрать квартиру", 2: "Приготовить ужин", 3: "Покрмить кота", 4: "Сделать домашку"}
print(a, a / 5, b, d)
# Попросим пользователя ввести данные:
age = int(input("Ваш год рождения: "))
user_name = str(input("Ваше имя: "))
print(("Гадание завершено, ваше имя"), user_name, ("и ваш возраст примерно "), (2023 - age))

# 2. Пользователь вводит время в секундах.
# Переведите время в часы, минуты, секунды и выведите в формате чч:мм:сс.
# Используйте форматирование строк.

sec = int(input("Введите количество секунд до 86400: "))
t_h = sec // 3600
t_m = (sec % 3600) // 60
t_s = (sec % 3600) % 60
if t_h > 24:
    print('Меняем число! В сутках меньше времени.')
else:
    print(f"Время {t_h}:{t_m}:{t_s}")

# 3. Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn.
# Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.

n = (input("Введите число: "))
n = int(n)
# Добавляем к одному строчному значению другое, удлиняем строку, получая новое значение.
nn = str(n) + str(n)
# Сообщаем, что у новой переменной это значение имеет целочисленный формат.
nn = int(nn)
nnn = str(nn) + str(n)
nnn = int(nnn)
print(n + nn + nnn)

# 4. Пользователь вводит целое положительное число. Найдите самую большую цифру в числе.
# Для решения используйте цикл while и арифметические операции.

x = int(input("Введите целое положительное число: "))
# задание начального значения наибольшей цифры
max_digit = 0
# перебор цифр числа и сравнение с наибольшей
while x > 0:
    digit = x % 10
    if digit > max_digit:
        max_digit = digit
    x = x // 10
# вывод наибольшего числа
print(max_digit)

# 5. Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким финансовым результатом работает фирма.
# Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки.
# Выведите соответствующее сообщение.

revenue = float(input("Размер выручки в рублях: "))
expenses = float(input("Размер затрат в рублях: "))
profit = revenue - expenses
if revenue > expenses:
    print('Доход составляет', profit, 'рублей')
elif revenue < expenses:
    print('Убыток составляет', profit, 'рублей')
elif revenue == expenses:
    print('Выход в ноль')

# или
if profit > 0:
    print('Доход составляет', profit, 'рублей')
elif profit < 0:
    print('Убыток составляет', profit, 'рублей')
elif profit == 0:
    print('Выход в ноль')

# 6. Если фирма отработала с прибылью, вычислите рентабельность выручки. Это отношение прибыли к выручке.
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчёте на одного сотрудника.

# выведем значение в процентах
p_revenue = profit / revenue * 100
print('Рентабельность', p_revenue, '%')

employee = int(input('Введите количество сотрудников: '))
ppe = profit / employee
print('Прибыль на одного сотрудника', (round(ppe, 2)), 'рублей')

# Спортсмен занимается ежедневными пробежками. В первый день его результат составил a километров.
# Каждый день спортсмен увеличивал результат на 10% относительно предыдущего.
# Требуется определить номер дня, на который результат спортсмена составит не менее b километров.
# Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.

a = int(input('Кол-во км в первый день: '))
b = int(input('До скольки километров надо увеличить пробежку: '))
result = 1
while a < b:
    # можно записать и a = a + a/100*10, но предложенный вариант короче
    a = a * 1.1
    result += 1
print(f'На {result} день бегун пробежит {b} или больше км')
